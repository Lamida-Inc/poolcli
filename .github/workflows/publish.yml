name: Publish to PyPI

on:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest
    environment: poolcli

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Create and activate virtual environment
      run: |
        uv venv
        source .venv/bin/activate
        echo "VIRTUAL_ENV=$GITHUB_WORKSPACE/.venv" >> $GITHUB_ENV
        echo "$GITHUB_WORKSPACE/.venv/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: |
        uv pip install toml
        python -c "import toml; print('toml module installed successfully')"

    - name: Extract version from pyproject.toml
      id: get_version
      run: |
        VERSION=$(python -c "import toml; print(toml.load('pyproject.toml')['project']['version'])")
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Check if tag exists
      id: check_tag
      run: |
        if git tag --list | grep -q "v${{ env.VERSION }}"; then
          echo "Tag v${{ env.VERSION }} already exists, skipping publish"
          echo "TAG_EXISTS=true" >> $GITHUB_ENV
        else
          echo "TAG_EXISTS=false" >> $GITHUB_ENV
        fi

    - name: Debug git configuration
      if: env.TAG_EXISTS == 'false'
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        echo "Git remote URL:"
        git remote -v
        echo "Current user:"
        whoami

    - name: Create and push tag
      if: env.TAG_EXISTS == 'false'
      run: |
        git tag v${{ env.VERSION }}
        git push origin v${{ env.VERSION }}

    - name: Clean dist folder
      if: env.TAG_EXISTS == 'false'
      run: rm -rf dist/*

    - name: Build package
      if: env.TAG_EXISTS == 'false'
      run: uv build

    - name: Publish to PyPI
      if: env.TAG_EXISTS == 'false'
      run: uv publish --token ${{ secrets.PYPI_API_TOKEN }}